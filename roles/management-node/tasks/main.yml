---
#
# NOTE: This is the normal version
# Make sure vcl-* are installed
#

- name: make sure vcl is installed
  yum: pkg=vcl state=installed
  when: is_normal_version
- name: make sure vcl-managementnode is installed
  yum: pkg=vcl-managementnode state=installed
  when: is_normal_version

#
# NOTE: This is the cybera version...
# Make sure vcl-cybera-* are installed
#

- name: make sure vcl-cybera is installed
  yum: pkg=vcl-cybera state=installed
  when: is_cybera_version
- name: make sure vcl-cybera-managementnode is installed
  yum: pkg=vcl-cybera-managementnode state=installed
  when: is_cybera_version

#
# Install novadns
#
- name: ensure novadns is installed
  yum: name=novadns state=installed
  when: is_cybera_version

- name: copy over novadns.conf file
  template: src=novadns.conf.j2 dest=/etc/novadns/novadns.conf mode=0640 group=root owner=root
  when: is_cybera_version

- name: start novadns
  service: name=novadns state=running
  when: is_cybera_version

#
# Make sure cpanm is installed so we can use the cpanm module
#

- name: ensure curl is installed
  yum: name=curl state=installed

- name: test to see if cpanm is installed
  shell: perl -MApp::cpanminus -e1
  register: cpanm
  changed_when: cpanm.rc > 0
  ignore_errors: true
  when: is_cybera_version

# XXX - Not cool to pull in a script like this, but I haven't found a good way to automate
#       installation of perl modules
- name: install cpanm
  shell: curl -L http://cpanmin.us | perl - App::cpanminus creates=/usr/local/bin/cpanm
  when: cpanm|failed

- name: create symlink to cpanm so ansible can find it on the path
  file: src=/usr/local/bin/cpanm dest=/usr/bin/cpanm state=link

- name: ensure required perl modules to install openstack compute module are installed
  #shell: /usr/local/bin/cpanm --force {{ item }}
  cpanm: name={{ item }}
  with_items:
    - "Test::Most"
    - "Time::HiRes"
    - "Data::Dumper::Names"
    - "LWP"
    - "Net::OpenStack::Compute"
  when: is_cybera_version


# Want to see higher than 6.03 I think...
# perl -MLWP -e 'print "$LWP::VERSION\n"'
# 6.05

# XXX - not idempotent
#- name: update libwww-perl (LWP) because the OS version does not do ssl very well
#  shell: /usr/local/bin/cpanm LWP
#  when: is_cybera_version

#- name: install Net::OpenStack::Compute perl module
#  shell: /usr/local/bin/cpanm Net::OpenStack::Compute
#  when: is_cybera_version

#
# vcld configuration file
#

- name: copy over vcld.conf template
  template: src=vcld.j2 dest=/etc/vcl/vcld.conf owner=root group=root mode=0640

#
# Keys and such
#
# Note that we are only creating keys and pem files if /etc/vcl/vcl.key does not exist.
#

- name: make sure openssl is installed
  yum: name=openssl state=installed

- name: check if there is a keypair for vcl already
  command: ls /etc/vcl/vcl.key
  register: vcl_key_exists
  ignore_errors: True
  changed_when: vcl_key_exists.rc > 0

- name: create an ssh keypair for vcl
  shell: /usr/bin/ssh-keygen -q -t dsa -C '' -N '' -f /etc/vcl/vcl.key
  when: vcl_key_exists.rc > 0


- name: check if there is a keys.pem file for vcl already
  command: ls /usr/share/vcl-web/.ht-inc/keys.pem
  register: vcl_pem_exists
  ignore_errors: True
  changed_when: vcl_pem_exists.rc > 0

- name: generate key.pem
  command: /usr/bin/openssl genrsa -aes256 -passout pass:{{ vcl_pemkey }} -out /usr/share/vcl-web/.ht-inc/keys.pem 2048
  when: vcl_pem_exists.rc > 0

- name: generate pubkey.pem
  command: /usr/bin/openssl rsa -pubout -passin pass:{{ vcl_pemkey }} -in /usr/share/vcl-web/.ht-inc/keys.pem -out /usr/share/vcl-web/.ht-inc/pubkey.pem
  when: vcl_pem_exists.rc > 0

#
# Install the openstack.pm module
#

- name: install the openstack.pm module
  get_url: force=yes url=https://raw.githubusercontent.com/cybera/openstack-vcl-module/master/openstack.pm dest=/usr/share/vcl-managementnode/lib/VCL/Module/Provisioning/openstack.pm
  when: openstack_vcl_module

#
# Unless there is a management node configured in the database, I don't believe that
# vcld will startup.
#

#
# Start vcld
#

#- name: make sure vcld is running
#  service: name=vcld state=running
